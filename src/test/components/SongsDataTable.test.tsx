import { SongsDataTable } from '@/components/features/report/SongsDataTable';
import type { SongInfo } from '@/types';
import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import { describe, expect, it } from 'vitest';

describe('SongsDataTable', () => {
  const mockData: SongInfo[] = [
    {
      name: 'Â§¢„ÅÆ„Å§„Åº„Åø',
      count: 2,
      rsgTokyo: '‚óØ',
      bcAichi: '',
      bcIshikawa: '',
      bcHyogo: '‚óØ',
      bcChiba: '',
      ctrOsaka: '',
      ctrAichi: '',
      ctrTokyo1: '',
      ctrTokyo2: '',
      sw: '',
      hhOsaka: '',
      hhAichi: '',
      hhFukuoka: '',
      hhMiyagi: '',
      hhKanagawa: '',
      glowAichi: '',
      glowMiyagi: '',
      glowFukuoka: '',
      glowKanagawa: '',
      glowHyogo: '',
      saHyogo: '',
      saMiyagi: '',
      saAichi: '',
      saFukuoka: '',
      saKanagawa1: '',
      saKanagawa2: '',
      hbHyogo: '',
      hbHiroshima: '',
      hbAichi: '',
      hbFukuoka: '',
      hbHokkaido: '',
      hbChiba1: '',
      hbChiba2: '',
      chomin2018TokyoDay: '',
      chomin2018TokyoNight: '',
      chomin2019HyogoDay: '',
      chomin2019HyogoNight: '',
      chomin2019TokyoDay: '',
      chomin2019TokyoNight: '',
      chomin2021YokohamaDay: '',
      chomin2021YokohamaNight: '',
      chomin2023TokyoDay: '',
      chomin2023TokyoNight: '',
      chomin2024SaitamaDay: '',
      chomin2024SaitamaNight: '',
      chomin2024Shiga: '',
      chomin2024Aichi: '',
    },
    {
      name: '„Ç¢„Ç§„Éû„Ç§„É¢„Ç≥',
      count: 0,
      rsgTokyo: '',
      bcAichi: '‚óØ',
      bcIshikawa: '',
      bcHyogo: '',
      bcChiba: '‚óØ',
      ctrOsaka: '',
      ctrAichi: '',
      ctrTokyo1: '',
      ctrTokyo2: '',
      sw: '',
      hhOsaka: '',
      hhAichi: '',
      hhFukuoka: '',
      hhMiyagi: '',
      hhKanagawa: '',
      glowAichi: '',
      glowMiyagi: '',
      glowFukuoka: '',
      glowKanagawa: '',
      glowHyogo: '',
      saHyogo: '',
      saMiyagi: '',
      saAichi: '',
      saFukuoka: '',
      saKanagawa1: '',
      saKanagawa2: '',
      hbHyogo: '',
      hbHiroshima: '',
      hbAichi: '',
      hbFukuoka: '',
      hbHokkaido: '',
      hbChiba1: '',
      hbChiba2: '',
      chomin2018TokyoDay: '',
      chomin2018TokyoNight: '',
      chomin2019HyogoDay: '',
      chomin2019HyogoNight: '',
      chomin2019TokyoDay: '',
      chomin2019TokyoNight: '',
      chomin2021YokohamaDay: '',
      chomin2021YokohamaNight: '',
      chomin2023TokyoDay: '',
      chomin2023TokyoNight: '',
      chomin2024SaitamaDay: '',
      chomin2024SaitamaNight: '',
      chomin2024Shiga: '',
      chomin2024Aichi: '',
    },
  ];

  it('„ÉÜ„Éº„Éñ„É´„Å®Ê§úÁ¥¢Áî®„ÅÆInput„ÅåÊèèÁîª„Åï„Çå„Çã„Åì„Å®', () => {
    render(<SongsDataTable data={mockData} />);
    expect(screen.getByPlaceholderText('Â§¢„ÅÆ„Å§„Åº„Åø...')).toBeInTheDocument();
    expect(screen.getByText('Êõ≤Âêç')).toBeInTheDocument();
    expect(screen.getByText('ÂõûÊï∞')).toBeInTheDocument();
  });

  it('„Éá„Éº„Çø„ÅåÊ≠£„Åó„ÅèÊèèÁîª„Åï„Çå„Çã„Åì„Å®', () => {
    render(<SongsDataTable data={mockData} />);
    expect(screen.getByText('Â§¢„ÅÆ„Å§„Åº„Åø')).toBeInTheDocument();
    expect(screen.getByText('„Ç¢„Ç§„Éû„Ç§„É¢„Ç≥')).toBeInTheDocument();
  });

  it('ÂÖ•Âäõ„Åó„ÅüÊñáÂ≠óÂàó„Å´ÈÉ®ÂàÜ‰∏ÄËá¥„Åô„ÇãÊõ≤Âêç„Å†„Åë„ÅåË°®Á§∫„Åï„Çå„Çã„Åì„Å®', async () => {
    render(<SongsDataTable data={mockData} />);
    const input = screen.getByPlaceholderText('Â§¢„ÅÆ„Å§„Åº„Åø...');
    await userEvent.type(input, 'Â§¢„ÅÆ');
    expect(screen.getByText('Â§¢„ÅÆ„Å§„Åº„Åø')).toBeInTheDocument();
    expect(screen.queryByText('„Ç¢„Ç§„Éû„Ç§„É¢„Ç≥')).toBeNull();
  });

  it('Ê§úÁ¥¢ÁµêÊûú„Åå0‰ª∂„ÅÆÂ†¥Âêà„ÄÅ"No results. - „ÅäÊé¢„Åó„ÅÆÊõ≤„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åüü§î"„ÅåË°®Á§∫„Åï„Çå„Çã„Åì„Å®', async () => {
    render(<SongsDataTable data={mockData} />);
    const input = screen.getByPlaceholderText('Â§¢„ÅÆ„Å§„Åº„Åø...');
    await userEvent.type(input, 'NotExistSong');
    expect(screen.getByText(/No results/)).toBeInTheDocument();
  });

  it('count„Åå0„Çà„ÇäÂ§ß„Åç„ÅÑË°å„ÅØËÉåÊôØËâ≤„ÅåÂ§âÊõ¥„Åï„Çå„Çã„Åì„Å®', () => {
    render(<SongsDataTable data={mockData} />);
    const row1 = screen.getByText('Â§¢„ÅÆ„Å§„Åº„Åø').closest('tr');
    const row2 = screen.getByText('„Ç¢„Ç§„Éû„Ç§„É¢„Ç≥').closest('tr');
    expect(row1).toHaveClass('bg-blue20');
    expect(row2).toHaveClass('bg-white');
  });
});
